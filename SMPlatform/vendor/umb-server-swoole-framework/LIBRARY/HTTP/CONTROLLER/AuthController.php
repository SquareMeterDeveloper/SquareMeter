<?php declare( strict_types = 1 );
/**
 * Project: UmbServerSwooleFramework
 * File: AuthController.php
 * Create: 2018/3/20
 * Author: Hugh.Lee
 * Email: umbrellahughlee@gmail.com
 * Copyright: Umbrella Inc.
 */

namespace UmbServer\SwooleFramework\LIBRARY\HTTP\CONTROLLER;

use UmbServer\SwooleFramework\LIBRARY\HTTP\REQUEST\Request;
use UmbServer\SwooleFramework\LIBRARY\UTIL\Algorithm;

/**
 * 认证控制器类
 * Class AuthController
 * @package UmbServer\SwooleFramework\LIBRARY\HTTP\CONTROLLER
 */
class AuthController extends Controller
{
    private $_auth_user; //登陆用户实例

    public
    function __construct( Request $request )
    {
        parent::__construct( $request );
    }

    private
    function authSignature()
    {

    }

    public
    function getAuthUserId()
    {
        return '123';
    }

    /**
     * 重写前置方法
     * @return bool
     */
    public
    function _before(): bool
    {
        $api_key = $this->HEADER[ 'api_key' ];
        $user    = call_user_func( [ __CLASS__, 'getByApiKey' ] );


        if ( isset( $this->FILES ) ) {
            $this->_login_user = $user;
            return true;
        }

        //检查signature
        $signature  = $this->HEADER[ 'signature' ];
        $path       = $this->REQUEST->server[ 'request_uri' ];
        $api_secret = $user->getAttribute( 'api_secret' );
        $verb       = $this->REQUEST->server[ 'request_method' ];
        $payload    = $verb . $path;

        if ( !empty( $this->$verb ) ) {
            //JSON_UNESCAPED_UNICODE用于处理中文问题
            $params_encode = json_encode( $this->$verb, JSON_UNESCAPED_UNICODE );
            $payload       .= $params_encode;
        }

        // var_dump($this->REQUEST->rawContent());
        echo 'Expire Preload String: ' . $payload . PHP_EOL;
        $expire_signature = Algorithm::hmacSha256( $payload, $api_secret );
        echo 'Signature: ' . $signature . PHP_EOL;
        echo 'Expire: ' . $expire_signature . PHP_EOL;
//        if ( $signature != $expire_signature ) {
//            throw new Error( Error::API_AUTH_FAIL );
//        }
        return true;
    }

    public
    function _after(): bool
    {
        parent::_after(); // TODO: Change the autogenerated stub
    }
}